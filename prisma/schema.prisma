generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id    String   @id @default(cuid())
  name  String
  email String
  profileImageUrl String?
  role  UserRole @default(USER)

  cart    CartItem[]
  reviews Review[]
  orders  Order[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String   @db.Text
  price       Int
  createdAt   DateTime @default(now())

  imageUrls ImageUrl[]
  cartItems CartItem[]
  reviews   Review[]
  orders    OrderItem[]
}

model ImageUrl {
  url String @id

  productId String
  Product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
}

model CarouselItem {
  id          String @id @default(cuid())
  title       String
  description String @db.Text
  imgUrl      String
}

model CartItem {
  id       String @id @default(cuid())
  quantity Int

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([productId, userId])
  @@index([productId])
  @@index([userId])
}

model Review {
  id          String @id @default(cuid())
  description String @db.Text

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([productId])
}

model Order {
  id            Int           @id @default(autoincrement())
  total         Int
  createdAt     DateTime      @default(now())
  paymentStatus PaymentStatus @default(PENDING)
  orderStatus   OrderStatus   @default(PROCESSING)
  address       String?       @db.Text
  paymentId     String?

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  items OrderItem[]

  @@index([userId])
}

model OrderItem {
  id       String @id @default(cuid())
  quantity Int

  orderId Int
  order   Order @relation(fields: [orderId], references: [id], onDelete: Cascade)

  productId String?
  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([orderId])
  @@index([productId])
}

enum PaymentStatus {
  PENDING
  SUCCESSFUL
  FAILED
}

enum OrderStatus {
  PROCESSING
  FULFILLED
}

enum UserRole {
  ADMIN
  USER
}
